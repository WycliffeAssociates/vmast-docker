services:
  web:
    build:
      dockerfile: ./web/Dockerfile
      context: .
    platform: linux/amd64
    depends_on:
      - db
      - php
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    environment:
      # nginx is serving htdocs, so these are needed there
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

  php:
    image: bibletranslationtools/vmast-php:${VMAST_IMAGE_TAG}
    # build:
    #   context: ./php
    #   dockerfile: ./Dockerfile
    platform: linux/amd64
    env_file:
      - .env
    environment:
      APP_URL: ${APP_URL}
      APP_EMAIL: ${APP_EMAIL}
      DEPLOY_ENV: ${DEPLOY_ENV}
      APP_PREFIX: ${APP_PREFIX}
      APP_TYPE: ${APP_TYPE}
      APP_MAINTENANCE: ${APP_MAINTENANCE}
      APP_MAINTENANCE_IPS: ${APP_MAINTENANCE_IPS}
      MAIN_HOST: ${MAIN_HOST}
      SOCKET_PORT: ${SOCKET_PORT}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASS: ${MAIL_PASS}
      MAIL_APP: ${MAIL_APP}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
      RECAPTCHA_SECRET: ${RECAPTCHA_SECRET}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_DSN_JS: ${SENTRY_DSN_JS}
      LOG_ROCKET: ${LOG_ROCKET}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_ROUTING: ${RABBITMQ_ROUTING}
      WACS_CLIENT_ID: ${WACS_CLIENT_ID}
      WACS_CLIENT_SECRET: ${WACS_CLIENT_SECRET}
      DCS_CLIENT_ID: ${DCS_CLIENT_ID}
      DCS_CLIENT_SECRET: ${DCS_CLIENT_SECRET}

  node:
    image: bibletranslationtools/vmast-node:${VMAST_IMAGE_TAG}
    # build:
    #   context: ./php
    #   dockerfile: ./Dockerfile
    env_file:
      - .env
    environment:
      APP_TYPE: ${APP_TYPE}
      MAIN_HOST: ${MAIN_HOST}
      SOCKET_PORT: ${SOCKET_PORT}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_NAME: ${MAIL_NAME}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASS: ${MAIL_PASS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
    ports:
      - 8001:8001
    depends_on:
      - rabbitmq
      - redis

  db:
    image: mariadb:10.5.25
    platform: linux/amd64
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - dbdata:/var/lib/mysql
      - .db_dump.sql.gz:/docker-entrypoint-initdb.d
    restart: always

  rabbitmq:
    image: rabbitmq:3.13
    ports:
      - 15672:15672
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  redis:
    # image: redis:7.2
    image: valkey/valkey:7.2.5
volumes:
  dbdata:
