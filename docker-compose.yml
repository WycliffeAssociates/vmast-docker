services:
  web:
    image: bibletranslationtools/vmast-web:${VMAST_IMAGE_TAG}
    # build:
    #   dockerfile: ./Dockerfile
    platform: linux/amd64
    depends_on:
      - db
      - php
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    environment:
      # nginx is serving htdocs, so these are needed there
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    # todo: watch or bind mount
    # volumes:
    #   - ./htdocs:/var/www/html
    #   - ./ssl:/etc/nginx/ssl
    #   - ./web/nginx:/etc/nginx/conf.d
    #   - ./db/dump:/db_dump

  php:
    image: bibletranslationtools/vmast-php:${VMAST_IMAGE_TAG}
    # build:
    #   context: ./php
    #   dockerfile: ./Dockerfile
    platform: linux/amd64
    env_file:
      - .env
    environment:
      APP_URL: ${APP_URL}
      APP_EMAIL: ${APP_EMAIL}
      DEPLOY_ENV: ${DEPLOY_ENV}
      APP_PREFIX: ${APP_PREFIX}
      APP_TYPE: ${APP_TYPE}
      APP_MAINTENANCE: ${APP_MAINTENANCE}
      APP_MAINTENANCE_IPS: ${APP_MAINTENANCE_IPS}
      MAIN_HOST: ${MAIN_HOST}
      SOCKET_PORT: ${SOCKET_PORT}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASS: ${MAIL_PASS}
      MAIL_APP: ${MAIL_APP}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
      RECAPTCHA_SECRET: ${RECAPTCHA_SECRET}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_DSN_JS: ${SENTRY_DSN_JS}
      LOG_ROCKET: ${LOG_ROCKET}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_ROUTING: ${RABBITMQ_ROUTING}
      WACS_CLIENT_ID: ${WACS_CLIENT_ID}
      WACS_CLIENT_SECRET: ${WACS_CLIENT_SECRET}
      DCS_CLIENT_ID: ${DCS_CLIENT_ID}
      DCS_CLIENT_SECRET: ${DCS_CLIENT_SECRET}
      # todo: watch or bind mount
    # volumes:
    #     - ./htdocs:/var/www/html
    #     - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf

  db:
    image: mariadb:10.5.25
    # build:
    # context: ./db
    # dockerfile: ./Dockerfile
    platform: linux/amd64
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - dbdata:/var/lib/mysql
      - ./db/dump:/docker-entrypoint-initdb.d
    restart: always

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   links:
  #     - db
  #   environment:
  #     PMA_HOST: db
  #     PMA_PORT: 3306
  #     PMA_ARBITRARY: 1
  #     UPLOAD_LIMIT: 512M
  #   ports:
  #     - 8081:80

  node:
    image: bibletranslationtools/vmast-node:${VMAST_IMAGE_TAG}
    # build:
    #   context: ./node
    #   dockerfile: ./Dockerfile
    # volumes:
    # watch;
    # - ./node:/node
    # - remove these two beneath;
    # - ./ssl:/etc/nginx/ssl
    # - ./scripts:/scripts
    env_file:
      - .env
    environment:
      APP_TYPE: ${APP_TYPE}
      MAIN_HOST: ${MAIN_HOST}
      SOCKET_PORT: ${SOCKET_PORT}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_NAME: ${MAIL_NAME}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASS: ${MAIL_PASS}
      SSL_CRT: ${SSL_CRT}
      SSL_KEY: ${SSL_KEY}
      SSL_CA: ${SSL_CA}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
    ports:
      - 8001:8001
    depends_on:
      - rabbitmq
      - redis

  rabbitmq:
    image: rabbitmq:3.13
    ports:
      - 15672:15672
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

  redis:
    # todo: valkey?
    # image: redis:7.2
    image: valkey/valkey:7.2.5
volumes:
  dbdata:
